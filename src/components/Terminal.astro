---
import BaseHead from '../components/BaseHead.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<section class="terminal">
<br>
    <p class="welcomecommand"><span class="guest">guest</span>@alex-berry.net:~$ welcome</p>
    <br>
    <div class="asciime">
    llcccccclll 
    lolllccc clllllc 
   oolloodkO0kdoooll 
   cll ood0NNNXOol  olc  
   cllc lookKNNX0kxl  lllc  
   ooclll  lkxkKNX0kkko  lolllc  
    llllooo  O0KXNNK0KXKd  loooollc  
   ccclllo  lOXXXXKKXNKo  loooolllc 
   ccccllcl   lOXXXXXX0d  cllooolllc 
  ccllllccc    dO0000Oo    llooooooc 
  cllolllc,.  .cxkkkkxl     ccloooc 
  cllllloc,.   .,.ol.'..   ., ccllllc  
  cccl...,..  .............,,'',lllc 
,..''..''.......................'lcl 
,................................., 
..................................' 
'...................................,
....................................' 
'.....................................,
,......................................' 
'.......................................
        </div>
        <div class="welcometxt">
Hi, I'm Alex.
</div>
<div class="welcometxt">
Welcome to my website. 
</div>
<div class="welcometxt">
It's not good but it's something. Which is what matters I guess.
        </div>
        <br>
        <p class="welcomecommand"><span class="guest">guest</span>@alex-berry.net:~$ blogposts</p>
        <br>
        <div class="welcometxt">
Here are a list of blog posts (and some tutorials) for the projects I've done:
</div>
<br>
        <section>
          <ul>
            {
              posts.map((post) => (
                <li>
                  <FormattedDate date={post.data.pubDate} />
                   - 
                  <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                </li>
              ))
            }
          </ul>
        </section>
        <br>
            <p class="frlistofcmds"><br>For a list of the commands, type
              <span class="help-txt">"help"</span>, for some info about me, type
                <span class="help-txt">"aboutme"</span>.</p>

    <div class="content"></div>


    <div id="txt">
      <p class="path">guest@alex-berry.net:~$</p>
      <div class="cursor">
        <input type="text" class="txt-input" autofocus >
        <i></i>
      </div>
    </div>


</section>

<style >
:global(*){
    margin: 0;
    padding: 0;
    font-family: 'Inconsolata', monospace;
    background: #211D1B;
    position: relative;
    
}

.terminal{
 padding: 50px ;
}

a {
  color: #1793d0;
}

body{
    color: #34be5b;
    background: #211D1B;
    width: 100vw;
}

.welcomecommand {
   display: block;
   position: relative;
}

:global(.asciime){
    position: relative;
    font-family: monospace;
    white-space: pre;
    font-size: 1.5em;
    color: #1793d0;
    text-align: center;
}

:global(.welcometxt){
    position: relative;
    font-family: monospace;
    font-size: 1.25em;
    color: #ffb6c1;
    text-align: center;
}

.txtt {
    display: relative;
    margin: 0;
    letter-spacing: 0.05em; 
    width: max-content;
}

.frlistofcmds {
    position: relative;
    padding-bottom: 0.4em;
    color: 	#DB6A6C;
    text-align: left;
}

.help-txt {
    color: #506F95;
}

#txt {
  display: flex;
  padding: 10px;
}

.txt-input {
  margin-top: 1px;
  margin-left: 7px;
  width: 100%;
  outline: none;
  border: none;
  background-color: transparent;
  color: #1793d0;
  font-size: 1em;
  flex: 1;
}

.cursor {
  position: relative;
  flex: 1;
  display: flex;
}
.cursor i {
  position: absolute;
  width: 10px;
  height: 100%;
  background-color: gray;
  left: 5px;
  animation-name: blink;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  opacity: 1;
}

.cursor input:focus + i {
  display: none;
}

@keyframes blink {
  from { opacity: 1; }
  to { opacity: 0; }
}

.welcome-txt {
    position: relative;
    padding-bottom: 0.4em;
    color: 	#DB6A6C;
}
 ul{
  list-style-type:none ;
  color: 	#1793d0;
  padding-left: 30%;
 }

</style>



<script>
import type { AstroConfigSchema } from "astro/dist/core/config";

let input = document.querySelector('.txt-input')as HTMLInputElement;
let content = document.querySelector('.content')as HTMLElement;
let clear = document.getElementsByClassName('.clear');

var directory: string
let directories_home: string[] = ['Desktop', ' Documents', ' Pictures', ' Videos'];
let directories_pictures: string[] = ['Photo1.jpg', ' Photo2.png'];
let directories_documents: string[] = ['CV.txt', ' privatekey.key', ' publickey.key.pub'];
let directories_desktop: string[] = ['Homework', ' helloworld.txt'];
let directories_homework: string[] = ['tysm.txt'];
let directories_videos: string[] = ['Nevergonnagiveyouup.mp4'];

directory = "Home"

function sleep(ms:any) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

input?.addEventListener('keydown', handleCommand);

function handleCommand(event: any) {
    if(event.key === 'Enter') {
        if (input !== null) {
            console.log("enterpressed")
            const command = input.value
            console.log(content.innerHTML) 
            console.log(content.innerHTML)
            const args = command.split(" ").filter(value => value.length > 0)
            content.innerHTML += `<p> $ ${command}<br></p>`;
            executeCommand(args)
            input.value = ""
        }
    }
}


async function executeCommand(args:string[]) {
  console.log(directory)  
  switch (args[0].toLowerCase()) {
        case "help":
        
        content.innerHTML += '<p class="commandresult">Available commands: help, clear, aboutme, neofetch, pwd, CV, ls, sources.</p><br>';
            break;
        case "clear":
            setTimeout(function() {
                if (content === null) {
                return}
                content.innerHTML = '<a id="clear"></a>';
                const before = document.getElementById("clear");
              }, 1);
            break;
          case "cv":
        
        content.innerHTML += '<p class="commandresult"><a href="https://drive.google.com/file/d/1KHfj9ISs_SBIRM0iVSVFcBUlefUYkdab/view?">Here is a link to my CV.<a> I would happily accept advice or if however unlikely you are an emplyeer a job offer. <a href="mailto:me@alex-berry.net">Just email me<a></p><br>';
            break;   
        case "aboutme":

        content.innerHTML +=
            `<p class="commandresult">Welcome to my website. I am Alex, a WHS student in year 11 in NZ. </p>
            `
            content.innerHTML += `<p class="commandresult">I created this website as a kind of portfolio of my tech projects as I discovered that for some of them there isn't really a guide. </p> `
            content.innerHTML += `<p class="commandresult"><p class="commandresult">Anyway, heres some other links to my profiles and my email.</p>`
            content.innerHTML += `
            <a href="https://github.com/AlexBerry0">Github<a>
            <br><a href="https://instagram.com/alex_berry_0">Instagram<a>
            <br><a href="mailto:me@alex-berry.net">Email<a>`

          break;

        case "demo":
        
        content.innerHTML += '<p class="commandresult">demo</p><br>';
        break;
        
        case "neofetch":
        
        content.innerHTML += '<p class="commandresult">underconstuction</p><br>';
        break;

        case "sources":
        
        content.innerHTML += '<p class="commandresult">underconstuction</p><br>';
        break;

        case "welcome":
        
        content.innerHTML += `
        <section class="terminal">
<br>
    <p class="welcomecommand"><span class="guest">guest</span>@alex-berry.net:~$ welcome</p>
    <br>
    <div class="asciime">
    llcccccclll 
    lolllccc clllllc 
   oolloodkO0kdoooll 
   cll ood0NNNXOol  olc  
   cllc lookKNNX0kxl  lllc  
   ooclll  lkxkKNX0kkko  lolllc  
    llllooo  O0KXNNK0KXKd  loooollc  
   ccclllo  lOXXXXKKXNKo  loooolllc 
   ccccllcl   lOXXXXXX0d  cllooolllc 
  ccllllccc    dO0000Oo    llooooooc 
  cllolllc,.  .cxkkkkxl     ccloooc 
  cllllloc,.   .,.ol.'..   ., ccllllc  
  cccl...,..  .............,,'',lllc 
,..''..''.......................'lcl 
,................................., 
..................................' 
'...................................,
....................................' 
'.....................................,
,......................................' 
'.......................................
        </div>
        <div class="welcometxt">
Hi, I'm Alex.
</div>
<div class="welcometxt">
Welcome to my website. 
</div>
<div class="welcometxt">
It's not good but it's something. Which is what matters I guess.
        </div>
        
        
        
        `;
        break;

        case "blogposts":
        
        content.innerHTML += `<p class="commandresult">I'm sorry, I have tried for over 2 hours, making this command repeatable is just too hard, maybe in the future I will fix it but for now I can't be bothered. TYSM for understanding.</p><br>`;
        break;

        case "pwd":
        
        if (directory == "Home") {
        content.innerHTML += '<p class="commandresult">/home/guest</p><br>';
        console.log(directory)
        }
        
        if (directory == "Pictures") {
        content.innerHTML += '<p class="commandresult">/home/guest/Pictures</p><br>';
        console.log(directory)
        }        
        
        if (directory == "Documents") {
        content.innerHTML += '<p class="commandresult">/home/guest/Documents</p><br>';
        console.log(directory)
        }
        
        if (directory == "Desktop") {
        content.innerHTML += '<p class="commandresult">/home/guest/Desktop</p><br>';
        }
        
        if (directory == "Videos") {
        content.innerHTML += '<p class="commandresult">/home/guest/Videos</p><br>';
        }
        
        if (directory == "Homework") {
          console.log(directory)
        content.innerHTML += '<p class="commandresult">/home/guest/Desktop/Homework</p><br>';
        }
        break;
        
        case "ls":
        
        if (directory == "Home") {
        content.innerHTML += `<p class="commandresult">${directories_home}<br></p>`;
        console.log(directory)
        }
        
        if (directory == "Pictures") {
        content.innerHTML += `<p class="commandresult">${directories_pictures}<br></p>`;
        console.log(directory)
        }        
        
        if (directory == "Documents") {
        content.innerHTML += `<p class="commandresult">${directories_documents}<br></p>`;
        console.log(directory)
        }
        
        if (directory == "Desktop") {
        content.innerHTML += `<p class="commandresult">${directories_desktop}<br></p>`;
        }
        
        if (directory == "Videos") {
        content.innerHTML += `<p class="commandresult">${directories_videos}<br></p>`;
        }
        
        if (directory == "Homework") {
          console.log(directory)
        content.innerHTML += `<p class="commandresult">${directories_homework}<br></p>`;
        }
        break;
        


              case "cd":
              switch (args[1]) {
                case "Home":
              console.log(args[1])
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest"</p>';
              break;
                case "Pictures":
              console.log(args[1])
              if (directory == "Home") {
              directory = "Pictures"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Pictures</p>';
              }
              else {
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest/Pictures"</p>';
              }
              break;
                case "Desktop":
              console.log(args[1])
              if (directory == "Home") {
              directory = "Desktop"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Desktop</p>';
              }
              else {
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest/Desktop"</p>';
              }
              break;
                case "Documents":
              console.log(args[1])
              if (directory == "Home") {
              directory = "Documents"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Documents</p>';
              }
              else{
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest/Documents"</p>';
              }
              break;
                case "Videos":
              console.log(args[1])
              if (directory == "Home") {
              directory = "Videos"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Videos</p>';
              }
              else{
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest/Videos"</p>';
              }
              break;
                case "Homework":
              console.log(args[1])
              if (directory == "Desktop") {
              directory = "Homework"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Desktop/Homework</p>';
              }
              else{
              content.innerHTML += '<p class="commandresult">No such file or directory in this folder, Did you mean "/Home/guest/Desktop/Homework"</p>';
              }
              break;
                case "/Home/guest":
              console.log(args[1])
              directory = "Home"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest</p>';
              break;
                case "/Home/guest/Pictures":
              console.log(args[1])
              directory = "Pictures"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Pictures</p>';
              break;
                case "/Home/guest/Desktop":
              console.log(args[1])
              directory = "Desktop"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Desktop</p>';
              break;
                case "/Home/guest/Documents":
              console.log(args[1])
              directory = "Documents"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Documents</p>';
              break;
                case "/Home/guest/Videos":
              console.log(args[1])
              directory = "Videos"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Videos</p>';
              break;
                case "/Home/guest/Desktop/Homework":
              console.log(args[1])
              directory = "Homework"
              content.innerHTML += '<p class="commandresult">You are now in /Home/guest/Desktop/Homework</p>';
              break;

              default:
              if (content === null) {
                      return}
                  content.innerHTML += `<p class="commandresult">No such file or directory called ${args[1]} in this folder, type ls for a list of folders, or use "cd /Home/guest" to go back to Home.<br></p>`;
                  break;
              }
        break;





        default:
            content.innerHTML += `Unknown command: ${args[0]}, for a list of commands type help.<br>`;
            break;
    }
}




</script>
